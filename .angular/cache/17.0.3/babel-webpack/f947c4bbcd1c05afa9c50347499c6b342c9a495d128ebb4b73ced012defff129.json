{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    name = \"\";\n    static ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)();\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"my-app\"]],\n      decls: 3,\n      vars: 0,\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\")(1, \"div\");\n          i0.ɵɵelement(2, \"router-outlet\");\n          i0.ɵɵelementEnd()();\n        }\n      },\n      dependencies: [i1.RouterOutlet],\n      styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%]; (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  {// webpackBootstrap var __webpack_modules__ = ({690: (() => {throw new Error(\\\"Module build failed (from ./node_modules/sass-loader/dist/cjs.js):nOnly 0 arguments allowed, but 2 were passed.n    \\\\250c\\\\2500\\\\2500> src\\\\\\\\styles\\\\\\\\global-css.scssn18  \\\\2502  .typography-h7{@include typography-h7(146, 145);}n    \\\\2502                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ invocationn    \\\\2575n    \\\\250c\\\\2500\\\\2500> src\\\\\\\\styles\\\\\\\\_font-mixins.scssn619 \\\\2502  @mixin typography-h7 {n    \\\\2502         \\\\2501\\\\2501\\\\2501\\\\2501\\\\2501\\\\2501\\\\2501\\\\2501\\\\2501\\\\2501\\\\2501\\\\2501\\\\2501  declarationn    \\\\2575n  src\\\\\\\\styles\\\\\\\\global-css.scss 18:16  typography-h7()n  src\\\\\\\\styles\\\\\\\\global-css.scss 18:16  @importn  src\\\\\\\\styles.scss 3:1               @importn  src\\\\\\\\app\\\\\\\\app.component.scss 1:9    root stylesheet\\\");})}); // startup // Load entry module and return exports // This entry module doesn\\\"t tell about it\\\"s top-level declarations so it can't be inlined\\nvar __webpack_exports__ = {}; __webpack_modules__[690](); resource = __webpack_exports__;})() ;{}\"]\n    });\n  }\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}